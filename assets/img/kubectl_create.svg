<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2321px" height="2753px" viewBox="-0.5 -0.5 2321 2753" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2022-11-15T08:37:55.885Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/19.0.3 Chrome/102.0.5005.63 Electron/19.0.3 Safari/537.36&quot; etag=&quot;pgnsC0-r7vK8MoJ2m1wF&quot; version=&quot;19.0.3&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;CFB6YjVbxeHivwXe3tF0&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><path d="M 1000 23 L 1000 0 L 1650 0 L 1650 23" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1000 23 L 1000 320 L 1650 320 L 1650 23" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 23 L 1650 23" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1324.5" y="16">NewKubectlCommand (staging/src/k8s.io/kubectl/pkg/cmd/cmd.go)</text></g><rect x="1000" y="20" width="650" height="300" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 648px; height: 1px; padding-top: 170px; margin-left: 1002px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><div><font color="#7f00ff">// NewKubectlCommand creates the `kubectl` command and its nested children.</font></div><div><b>func NewKubectlCommand</b>(o KubectlOptions) *cobra.Command {</div><div><span style="white-space: pre;">	</span>...<br /></div><div><span style="">	</span>groups := templates.CommandGroups{</div><div><span style="">		</span>{</div><div><span style="">			</span>Message: "Basic Commands (Beginner):",</div><div><span style="">			</span>Commands: []*cobra.Command{</div><div><span style="">				</span><b><font color="#00994d">create.NewCmdCreate(f, o.IOStreams)</font></b>,</div><div><span style="">				</span>expose.NewCmdExposeService(f, o.IOStreams),</div><div><span style="">				</span>run.NewCmdRun(f, o.IOStreams),</div><div><span style="">				</span>set.NewCmdSet(f, o.IOStreams),</div><div><span style="">			</span>},</div><div><span style="">		</span>},</div><div><span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>...<br /></div><div><span style="">	</span>}</div><div><span style="">	</span>groups.Add(cmds)</div><div><br /></div><div><span style="white-space: pre;">	</span>...<br /></div><div><span style="">	</span>return cmds</div><div>}</div></pre></div></div></div></foreignObject><text x="1002" y="174" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">// NewKubectlCommand creates the `kubectl` command and its nested children....</text></switch></g><path d="M 900 373 L 900 350 L 1750 350 L 1750 373" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 900 373 L 900 1260 L 1750 1260 L 1750 373" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 900 373 L 1750 373" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1324.5" y="366">NewCmdCreate (staging/src/k8s.io/kubectl/pkg/cmd/create/create.go)</text></g><rect x="900" y="370" width="850" height="890" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 848px; height: 1px; padding-top: 815px; margin-left: 902px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><div>/<font color="#7f00ff">/ NewCmdCreate returns new initialized instance of create sub command</font></div><div><b>func NewCmdCreate</b>(f cmdutil.Factory, ioStreams genericclioptions.IOStreams) *cobra.Command {</div><div><span style="">	</span>o := NewCreateOptions(ioStreams)</div><div><br /></div><div><span style="">	</span>cmd := &amp;cobra.Command{</div><div><span style="">		</span>Use:                   "create -f FILENAME",</div><div><span style="">		</span>DisableFlagsInUseLine: true,</div><div><span style="">		</span>Short:                 i18n.T("Create a resource from a file or from stdin"),</div><div><span style="">		</span>Long:                  createLong,</div><div><span style="">		</span>Example:               createExample,</div><div><span style="">		</span>Run: func(cmd *cobra.Command, args []string) {</div><div><span style="">			</span>if cmdutil.IsFilenameSliceEmpty(o.FilenameOptions.Filenames, o.FilenameOptions.Kustomize) {</div><div><span style="">				</span>ioStreams.ErrOut.Write([]byte("Error: must specify one of -f and -k\n\n"))</div><div><span style="">				</span>defaultRunFunc := cmdutil.DefaultSubCommandRun(ioStreams.ErrOut)</div><div><span style="">				</span>defaultRunFunc(cmd, args)</div><div><span style="">				</span>return</div><div><span style="">			</span>}</div><div><span style="">			</span>cmdutil.CheckErr(o.Complete(f, cmd))</div><div><span style="">			</span>cmdutil.CheckErr(o.ValidateArgs(cmd, args))</div><div><span style="white-space: pre;">	</span><span style="white-space: pre;">	</span><span style="white-space: pre;">	</span><font color="#7f00ff">// run create -f filename</font><br /></div><div><span style="">			</span><b><font color="#00994d">cmdutil.CheckErr(o.RunCreate(f, cmd))</font></b></div><div><span style="">		</span>},</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>// bind flag structs</div><div><span style="">	</span>o.RecordFlags.AddFlags(cmd)</div><div><br /></div><div><span style="">	</span>usage := "to use to create the resource"</div><div><span style="">	</span>cmdutil.AddFilenameOptionFlags(cmd, &amp;o.FilenameOptions, usage)</div><div><span style="">	</span>cmdutil.AddValidateFlags(cmd)</div><div><span style="">	</span>cmd.Flags().BoolVar(&amp;o.EditBeforeCreate, "edit", o.EditBeforeCreate, "Edit the API resource before creating")</div><div><span style="">	</span>cmd.Flags().Bool("windows-line-endings", runtime.GOOS == "windows",</div><div><span style="">		</span>"Only relevant if --edit=true. Defaults to the line ending native to your platform.")</div><div><span style="">	</span>cmdutil.AddApplyAnnotationFlags(cmd)</div><div><span style="">	</span>cmdutil.AddDryRunFlag(cmd)</div><div><span style="">	</span>cmdutil.AddLabelSelectorFlagVar(cmd, &amp;o.Selector)</div><div><span style="">	</span>cmd.Flags().StringVar(&amp;o.Raw, "raw", o.Raw, "Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.")</div><div><span style="">	</span>cmdutil.AddFieldManagerFlagVar(cmd, &amp;o.fieldManager, "kubectl-create")</div><div><br /></div><div><span style="">	</span>o.PrintFlags.AddFlags(cmd)</div><div><br /></div><div><span style="">	</span><font color="#7f00ff">// create subcommands</font></div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateNamespace(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateQuota(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateSecret(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateConfigMap(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateServiceAccount(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateService(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateDeployment(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateClusterRole(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateClusterRoleBinding(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateRole(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateRoleBinding(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreatePodDisruptionBudget(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreatePriorityClass(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateJob(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateCronJob(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateIngress(f, ioStreams))</div><div><span style="">	</span>cmd.AddCommand(NewCmdCreateToken(f, ioStreams))</div><div><span style="">	</span>return cmd</div><div>}</div></pre></div></div></div></foreignObject><text x="902" y="819" fill="#000000" font-family="Helvetica" font-size="12px">// NewCmdCreate returns new initialized instance of create sub command...</text></switch></g><path d="M 0 1323 L 0 1300 L 1050 1300 L 1050 1323" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 1323 L 0 2556 L 1050 2556 L 1050 1323" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 1323 L 1050 1323" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="524.5" y="1316">RunCreate (staging/src/k8s.io/kubectl/pkg/cmd/create/create.go)</text></g><rect x="0" y="1320" width="1050" height="1236" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1048px; height: 1px; padding-top: 1938px; margin-left: 2px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><div><font color="#7f00ff">// RunCreate performs the creation</font></div><div><b>func (o *CreateOptions) RunCreate</b>(f cmdutil.Factory, cmd *cobra.Command) error {</div><div><font color="#7f00ff"><span style="white-space: pre;">	</span>// for --raw argument<br /></font></div><div><font color="#7f00ff"><span style="">	</span>// raw only makes sense for a single file resource multiple objects aren't likely to do what you want.</font></div><div><font color="#7f00ff"><span style="">	</span>// the validator enforces this, so</font></div><div><span style="">	</span>if len(o.Raw) &gt; 0 {</div><div><span style="">		</span>restClient, err := f.RESTClient()</div><div><span style="">		</span>if err != nil {</div><div><span style="">			</span>return err</div><div><span style="">		</span>}</div><div><span style="">		</span>return rawhttp.RawPost(restClient, o.IOStreams, o.Raw, o.FilenameOptions.Filenames[0])</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>if o.EditBeforeCreate {</div><div><span style="">		</span>return RunEditOnCreate(f, o.PrintFlags, o.RecordFlags, o.IOStreams, cmd, &amp;o.FilenameOptions, o.fieldManager)</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>schema, err := f.Validator(o.ValidationDirective, o.FieldValidationVerifier)</div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>cmdNamespace, enforceNamespace, err := f.ToRawKubeConfigLoader().Namespace()</div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>r := f.NewBuilder().</div><div><span style="">		</span>Unstructured().</div><div><span style="">		</span>Schema(schema).</div><div><span style="">		</span>ContinueOnError().</div><div><span style="">		</span>NamespaceParam(cmdNamespace).DefaultNamespace().</div><div><span style="">		</span>FilenameParam(enforceNamespace, &amp;o.FilenameOptions).</div><div><span style="">		</span>LabelSelectorParam(o.Selector).</div><div><span style="">		</span>Flatten().</div><div><span style="">		</span>Do()</div><div><span style="">	</span>err = r.Err()</div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>count := 0</div><div><span style="">	</span>err = r.Visit(func(info *resource.Info, err error) error {</div><div><span style="">		</span>if err != nil {</div><div><span style="">			</span>return err</div><div><span style="">		</span>}</div><div><span style="">		</span>if err := util.CreateOrUpdateAnnotation(cmdutil.GetFlagBool(cmd, cmdutil.ApplyAnnotationsFlag), info.Object, scheme.DefaultJSONEncoder()); err != nil {</div><div><span style="">			</span>return cmdutil.AddSourceToErr("creating", info.Source, err)</div><div><span style="">		</span>}</div><div><br /></div><div><span style="">		</span>if err := o.Recorder.Record(info.Object); err != nil {</div><div><span style="">			</span>klog.V(4).Infof("error recording current command: %v", err)</div><div><span style="">		</span>}</div><div><br /></div><div><span style="">		</span>if o.DryRunStrategy != cmdutil.DryRunClient {</div><div><span style="">			</span>if o.DryRunStrategy == cmdutil.DryRunServer {</div><div><span style="">				</span>if err := o.DryRunVerifier.HasSupport(info.Mapping.GroupVersionKind); err != nil {</div><div><span style="">					</span>return cmdutil.AddSourceToErr("creating", info.Source, err)</div><div><span style="">				</span>}</div><div><span style="">			</span>}</div><div><span style="white-space: pre;">	</span><span style="white-space: pre;">	</span><span style="white-space: pre;">	</span><font color="#7f00ff">// create resource</font><br /></div><div><span style="">			</span>obj, err := resource.</div><div><span style="">				</span>NewHelper(info.Client, info.Mapping).</div><div><span style="">				</span>DryRun(o.DryRunStrategy == cmdutil.DryRunServer).</div><div><span style="">				</span>WithFieldManager(o.fieldManager).</div><div><span style="">				</span>WithFieldValidation(o.ValidationDirective).</div><div><span style="">				</span><b><font color="#00994d">Create(info.Namespace, true, info.Object)</font></b></div><div><span style="">			</span>if err != nil {</div><div><span style="">				</span>return cmdutil.AddSourceToErr("creating", info.Source, err)</div><div><span style="">			</span>}</div><div><span style="">			</span>info.Refresh(obj, true)</div><div><span style="">		</span>}</div><div><br /></div><div><span style="">		</span>count++</div><div><br /></div><div><span style="">		</span>return o.PrintObj(info.Object)</div><div><span style="">	</span>})</div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return err</div><div><span style="">	</span>}</div><div><span style="">	</span>if count == 0 {</div><div><span style="">		</span>return fmt.Errorf("no objects passed to create")</div><div><span style="">	</span>}</div><div><span style="">	</span>return nil</div><div>}</div></pre></div></div></div></foreignObject><text x="2" y="1942" fill="#000000" font-family="Helvetica" font-size="12px">// RunCreate performs the creation...</text></switch></g><path d="M 55 2603 L 55 2580 L 995 2580 L 995 2603" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 55 2603 L 55 2750 L 995 2750 L 995 2603" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 55 2603 L 995 2603" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="524.5" y="2596">createResource (staging/src/k8s.io/cli-runtime/pkg/resource/helper.go)</text></g><rect x="55" y="2600" width="940" height="150" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 938px; height: 1px; padding-top: 2675px; margin-left: 57px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><div><b>func (m *Helper) createResource</b>(c RESTClient, resource, namespace string, obj runtime.Object, options *metav1.CreateOptions) (runtime.Object, error) {</div><div><span style="">	</span>return <b><font color="#00994d">c.Post()</font></b>.</div><div><span style="">		</span>NamespaceIfScoped(namespace, m.NamespaceScoped).</div><div><span style="">		</span>Resource(resource).</div><div><span style="">		</span>VersionedParams(options, metav1.ParameterCodec).</div><div><span style="">		</span>Body(obj).</div><div><span style="">		</span>Do(context.TODO()).</div><div><span style="">		</span>Get()</div><div>}</div></pre></div></div></div></foreignObject><text x="57" y="2679" fill="#000000" font-family="Helvetica" font-size="12px">func (m *Helper) createResource(c RESTClient, resource, namespace string, obj runtime.Object, options *metav1.CreateOptions) (runtime.Object, error) {...</text></switch></g><path d="M 1110 1323 L 1110 1300 L 1800 1300 L 1800 1323" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1110 1323 L 1110 1740 L 1800 1740 L 1800 1323" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1110 1323 L 1800 1323" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1454.5" y="1316">NewCmdCreateNamespace (staging/src/k8s.io/kubectl/pkg/cmd/create/create_namespace.go)</text></g><rect x="1110" y="1320" width="690" height="420" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 688px; height: 1px; padding-top: 1530px; margin-left: 1112px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><div><font color="#7f00ff">// NewCmdCreateNamespace is a macro command to create a new namespace</font></div><div><b>func NewCmdCreateNamespace</b>(f cmdutil.Factory, ioStreams genericclioptions.IOStreams) *cobra.Command {</div><div><br /></div><div><span style="">	</span>o := NewNamespaceOptions(ioStreams)</div><div><br /></div><div><span style="">	</span>cmd := &amp;cobra.Command{</div><div><span style="">		</span>Use:                   "namespace NAME [--dry-run=server|client|none]",</div><div><span style="">		</span>DisableFlagsInUseLine: true,</div><div><span style="">		</span>Aliases:               []string{"ns"},</div><div><span style="">		</span>Short:                 i18n.T("Create a namespace with the specified name"),</div><div><span style="">		</span>Long:                  namespaceLong,</div><div><span style="">		</span>Example:               namespaceExample,</div><div><span style="">		</span>Run: func(cmd *cobra.Command, args []string) {</div><div><span style="">			</span>cmdutil.CheckErr(o.Complete(f, cmd, args))</div><div><span style="">			</span>cmdutil.CheckErr(o.Validate())</div><div><span style="">			</span><b><font color="#00994d">cmdutil.CheckErr(o.Run())</font></b></div><div><span style="">		</span>},</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>o.PrintFlags.AddFlags(cmd)</div><div><br /></div><div><span style="">	</span>cmdutil.AddApplyAnnotationFlags(cmd)</div><div><span style="">	</span>cmdutil.AddValidateFlags(cmd)</div><div><span style="">	</span>cmdutil.AddDryRunFlag(cmd)</div><div><span style="">	</span>cmdutil.AddFieldManagerFlagVar(cmd, &amp;o.FieldManager, "kubectl-create")</div><div><br /></div><div><span style="">	</span>return cmd</div><div>}</div></pre></div></div></div></foreignObject><text x="1112" y="1534" fill="#000000" font-family="Helvetica" font-size="12px">// NewCmdCreateNamespace is a macro command to create a new namespace...</text></switch></g><path d="M 1085 1793 L 1085 1770 L 1825 1770 L 1825 1793" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1085 1793 L 1085 2252 L 1825 2252 L 1825 1793" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1085 1793 L 1825 1793" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1454.5" y="1786">Run (staging/src/k8s.io/kubectl/pkg/cmd/create/create_namespace.go)</text></g><rect x="1085" y="1790" width="740" height="462" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 738px; height: 1px; padding-top: 2021px; margin-left: 1087px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><div><font color="#7f00ff">// Run calls the CreateSubcommandOptions.Run in NamespaceOpts instance</font></div><div><b>func (o *NamespaceOptions) Run()</b> error {</div><div><span style="">	</span>namespace := o.createNamespace()</div><div><span style="">	</span>if err := util.CreateOrUpdateAnnotation(o.CreateAnnotation, namespace, scheme.DefaultJSONEncoder()); err != nil {</div><div><span style="">		</span>return err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>if o.DryRunStrategy != cmdutil.DryRunClient {</div><div><span style="">		</span>createOptions := metav1.CreateOptions{}</div><div><span style="">		</span>if o.FieldManager != "" {</div><div><span style="">			</span>createOptions.FieldManager = o.FieldManager</div><div><span style="">		</span>}</div><div><span style="">		</span>createOptions.FieldValidation = o.ValidationDirective</div><div><span style="">		</span>if o.DryRunStrategy == cmdutil.DryRunServer {</div><div><span style="">			</span>if err := o.DryRunVerifier.HasSupport(namespace.GroupVersionKind()); err != nil {</div><div><span style="">				</span>return err</div><div><span style="">			</span>}</div><div><span style="">			</span>createOptions.DryRun = []string{metav1.DryRunAll}</div><div><span style="">		</span>}</div><div><span style="">		</span>var err error</div><div><span style="">		</span>namespace, err = <b><font color="#00994d">o.Client.Namespaces().Create(context.TODO(), namespace, createOptions)</font></b></div><div><span style="">		</span>if err != nil {</div><div><span style="">			</span>return err</div><div><span style="">		</span>}</div><div><span style="">	</span>}</div><div><span style="">	</span>return o.PrintObj(namespace)</div><div>}</div></pre></div></div></div></foreignObject><text x="1087" y="2025" fill="#000000" font-family="Helvetica" font-size="12px">// Run calls the CreateSubcommandOptions.Run in NamespaceOpts instance...</text></switch></g><path d="M 1840 1323 L 1840 1300 L 2320 1300 L 2320 1323" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1840 1323 L 1840 1500 L 2320 1500 L 2320 1323" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1840 1323 L 2320 1323" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2079.5" y="1316">NewCmdCreateXXX (staging/src/k8s.io/kubectl/pkg/cmd/create/create_xxx.go)</text></g><rect x="1840" y="1320" width="480" height="180" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 478px; height: 1px; padding-top: 1410px; margin-left: 1841px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">。。。。。。</div></div></div></foreignObject><text x="2080" y="1414" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">。。。。。。</text></switch></g><path d="M 1325 320 L 1325 343.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1325 348.88 L 1321.5 341.88 L 1325 343.63 L 1328.5 341.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1325 1260 L 1325 1280 L 518.7 1280 L 518.7 1294.89" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 518.7 1300.14 L 515.2 1293.14 L 518.7 1294.89 L 522.2 1293.14 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1325 1260 L 1325 1280 L 1455 1280 L 1455 1293.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 1298.88 L 1451.5 1291.88 L 1455 1293.63 L 1458.5 1291.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1325 1260 L 1325 1280 L 2080 1280 L 2080 1293.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2080 1298.88 L 2076.5 1291.88 L 2080 1293.63 L 2083.5 1291.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 1740 L 1455 1763.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 1768.88 L 1451.5 1761.88 L 1455 1763.63 L 1458.5 1761.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 525 2556 L 525 2573.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 525 2578.88 L 521.5 2571.88 L 525 2573.63 L 528.5 2571.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>