<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3721px" height="3348px" viewBox="-0.5 -0.5 3721 3348" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2022-08-19T07:02:41.460Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/19.0.3 Chrome/102.0.5005.63 Electron/19.0.3 Safari/537.36&quot; etag=&quot;92XjZWOrwBA8FwRvigjH&quot; version=&quot;19.0.3&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;F_VsGBK69sB3bI9-KiYU&quot; name=&quot;第 1 页&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><path d="M 1925 23 L 1925 0 L 2235 0 L 2235 23" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1925 23 L 1925 110 L 2235 110 L 2235 23" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1925 23 L 2235 23" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2079.5" y="16">main (cmd/kube-apiserver/apiserver.go)</text></g><rect x="1925" y="20" width="310" height="90" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 308px; height: 1px; padding-top: 65px; margin-left: 1927px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><b>func main()</b> {<div><span style="">	</span><b><font color="#00994d">command := app.NewAPIServerCommand()</font></b></div><div><span style="">	</span><b><font color="#00994d">code := cli.Run(command)</font></b></div><div><span style="">	</span>os.Exit(code)</div><div>}</div></pre></div></div></div></foreignObject><text x="1927" y="69" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">func main() {...</text></switch></g><path d="M 1820 173 L 1820 150 L 2340 150 L 2340 173" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1820 173 L 1820 390 L 2340 390 L 2340 173" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1820 173 L 2340 173" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2079.5" y="166">Run (cmd/kube-apiserver/app/server.go)</text></g><rect x="1820" y="170" width="520" height="220" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 518px; height: 1px; padding-top: 280px; margin-left: 1822px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><font color="#7f00ff">// Run runs the specified APIServer.This should never exit.</font><div><b>func Run</b>(completeOptions completedServerRunOptions, stopCh &lt;-chan struct{}) error {</div><div><span style="">	</span>...</div><div><span style="">	</span><b><font color="#00994d">server, err := CreateServerChain(completeOptions, stopCh)</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span><b><font color="#00994d">prepared, err := server.PrepareRun()</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>return <b><font color="#00994d">prepared.Run(stopCh)</font></b></div><div>}</div></pre></div></div></div></foreignObject><text x="1822" y="284" fill="#000000" font-family="Helvetica" font-size="12px">// Run runs the specified APIServer.This should never exit....</text></switch></g><path d="M 1205 453 L 1205 430 L 2955 430 L 2955 453" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1205 453 L 1205 1160 L 2955 1160 L 2955 453" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1205 453 L 2955 453" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2079.5" y="446">CreateServerChain (cmd/kube-apiserver/app/server.go)</text></g><rect x="1205" y="450" width="1751" height="710" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1749px; height: 1px; padding-top: 805px; margin-left: 1207px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><font color="#7f00ff">// CreateServerChain creates the apiservers connected via delegation.</font><div><b>func CreateServerChain</b>(completedOptions completedServerRunOptions, stopCh &lt;-chan struct{}) (*aggregatorapiserver.APIAggregator, error) {</div><div><span style="">	</span><font color="#7f00ff">// create apiserver config via run options</font><br /></div><div><span style="">	</span><b><font color="#00994d">kubeAPIServerConfig, serviceResolver, pluginInitializer, err := CreateKubeAPIServerConfig(completedOptions)</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span><font color="#7f00ff">// If additional API servers are added, they should be gated.</font></div><div><font color="#7f00ff"><span style="">	</span>// create apiExtensionsServer config<br /></font></div><div><span style="">	</span><b><font color="#00994d">apiExtensionsConfig, err := createAPIExtensionsConfig</font></b>(*kubeAPIServerConfig.GenericConfig, kubeAPIServerConfig.ExtraConfig.VersionedInformers, pluginInitializer, completedOptions.ServerRunOptions, completedOptions.MasterCount,</div><div><span style="">		</span>serviceResolver, webhook.NewDefaultAuthenticationInfoResolverWrapper(kubeAPIServerConfig.ExtraConfig.ProxyTransport, kubeAPIServerConfig.GenericConfig.EgressSelector, kubeAPIServerConfig.GenericConfig.LoopbackClientConfig, kubeAPIServerConfig.GenericConfig.TracerProvider))</div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span><font color="#7f00ff">// notFoundHandler run at the end of delegation chain, returns 503 or 404 (staging/src/k8s.io/apiserver/pkg/util/notfoundhandler/not_found_handler.go)</font><br /></div><div><span style="">	</span><b><font color="#00994d">notFoundHandler := notfoundhandler.New(kubeAPIServerConfig.GenericConfig.Serializer, genericapifilters.NoMuxAndDiscoveryIncompleteKey)</font></b></div><div><span style="">	</span><font color="#7f00ff">// create apiExtensionsServer to extend additional apis which are not part of core k8s apigroup</font><br /></div><div><font color="#7f00ff"><span style="">	</span>// chained with notFoundHandler, apiExtensionsServer.</font><span style="background-color: initial;"><font color="#7f00ff">delegationTarget = notFoundHandler</font></span></div><div><span style="background-color: initial;"><font color="#7f00ff"><span style="">	</span>// handle the requests of </font></span><font color="#7f00ff">CustomResourceDefinition（CRD）</font></div><div><span style="">	</span><b><font color="#00994d">apiExtensionsServer, err := createAPIExtensionsServer(apiExtensionsConfig, genericapiserver.NewEmptyDelegateWithCustomHandler(notFoundHandler))</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><br /></div><div><font color="#7f00ff"><span style="">	</span>// create kubeAPIServer which is used to handle core apis<br /></font></div><div><font color="#7f00ff"><span style="">	</span>// chained with apiExtensionsServer, kubeAPIServer.delegationTarget = apiExtensionsServer</font><br /></div><div><span style="">	</span><b><font color="#00994d">kubeAPIServer, err := CreateKubeAPIServer(kubeAPIServerConfig, apiExtensionsServer.GenericAPIServer)</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span><font color="#7f00ff">// aggregator comes last in the chain</font></div><div><span style="">	</span><b><font color="#00994d">aggregatorConfig, err := createAggregatorConfig</font></b>(*kubeAPIServerConfig.GenericConfig, completedOptions.ServerRunOptions, kubeAPIServerConfig.ExtraConfig.VersionedInformers, serviceResolver, kubeAPIServerConfig.ExtraConfig.ProxyTransport, pluginInitializer)</div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><font color="#7f00ff"><span style="">	</span>// create aggregatorServer, chained with kubeAPIServer, aggregatorServer.delegationTarget = kubeAPIServer<br /></font></div><div><font color="#7f00ff"><span style="">	</span>// receive the requests of apiregistration.k8s.io resource and send to aggregated server</font><br /></div><div><span style="">	</span><b><font color="#00994d">aggregatorServer, err := createAggregatorServer(aggregatorConfig, kubeAPIServer.GenericAPIServer, apiExtensionsServer.Informers)</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>// we don't need special handling for innerStopCh because the aggregator server doesn't create any go routines</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>return aggregatorServer, nil</div><div>}</div></pre></div></div></div></foreignObject><text x="1207" y="809" fill="#000000" font-family="Helvetica" font-size="12px">// CreateServerChain creates the apiservers connected via delegation....</text></switch></g><path d="M 155 1243 L 155 1220 L 1425 1220 L 1425 1243" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 155 1243 L 155 2010 L 1425 2010 L 1425 1243" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 155 1243 L 1425 1243" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="789.5" y="1236">CreateKubeAPIServerConfig (cmd/kube-apiserver/app/server.go)</text></g><rect x="155" y="1240" width="1270" height="770" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1268px; height: 1px; padding-top: 1625px; margin-left: 157px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><font color="#7f00ff">// CreateKubeAPIServerConfig creates all the resources for running the API server, but runs none of them</font><div><b>func CreateKubeAPIServerConfig(s completedServerRunOptions)</b> (</div><div><span style="">	</span>*controlplane.Config,</div><div><span style="">	</span>aggregatorapiserver.ServiceResolver,</div><div><span style="">	</span>[]admission.PluginInitializer,</div><div><span style="">	</span>error,</div><div>) {</div><div><span style="">	</span>proxyTransport := CreateProxyTransport()</div><div><span style="white-space: pre;">	</span><font color="#7f00ff">// create generic config</font><br /></div><div><span style="">	</span><b><font color="#00994d">genericConfig, versionedInformers, serviceResolver, pluginInitializers, admissionPostStartHook, storageFactory, err := buildGenericConfig(s.ServerRunOptions, proxyTransport)</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return nil, nil, nil, err</div><div><span style="">	</span>}</div><div><span style="white-space: pre;">	</span>...<br /></div><div><span style="white-space: pre;">	</span><font color="#7f00ff">// create master kube-apiserver config (pkg/controlplane/instance.go)</font><br /></div><div><span style="">	</span><b><font color="#00994d">config := &amp;controlplane.Config</font></b>{</div><div><span style="">		</span>GenericConfig: genericConfig,</div><div><span style="">		</span>ExtraConfig: controlplane.ExtraConfig{</div><div><span style="">			</span>APIResourceConfigSource: storageFactory.APIResourceConfigSource,</div><div><span style="">			</span>StorageFactory:                       storageFactory,</div><div><span style="">			</span>EventTTL:                <span style="white-space: pre;">	</span>   s.EventTTL,</div><div><span style="">			</span>KubeletClientConfig:     <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   s.KubeletConfig,</div><div><span style="">			</span>EnableLogsSupport:       <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   s.EnableLogsHandler,</div><div><span style="">			</span>ProxyTransport:          <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   proxyTransport,</div><div><br /></div><div><span style="">			</span>ServiceIPRange:          <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   s.PrimaryServiceClusterIPRange,</div><div><span style="">			</span>APIServerServiceIP:      <span style="white-space: pre;">	</span> <span style="white-space: pre;">	</span>   s.APIServerServiceIP,</div><div><span style="">			</span>SecondaryServiceIPRange: <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   s.SecondaryServiceClusterIPRange,</div><div><br /></div><div><span style="">			</span>APIServerServicePort: 443,</div><div><br /></div><div><span style="">			</span>ServiceNodePortRange:      <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   s.ServiceNodePortRange,</div><div><span style="">			</span>KubernetesServiceNodePort: <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   s.KubernetesServiceNodePort,</div><div><br /></div><div><span style="">			</span>EndpointReconcilerType: <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   reconcilers.Type(s.EndpointReconcilerType),</div><div><span style="">			</span>MasterCount:            <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   s.MasterCount,</div><div><br /></div><div><span style="">			</span>ServiceAccountIssuer:        <span style="white-space: pre;">	</span>   s.ServiceAccountIssuer,</div><div><span style="">			</span>ServiceAccountMaxExpiration: <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   s.ServiceAccountTokenMaxExpiration,</div><div><span style="">			</span>ExtendExpiration:            <span style="white-space: pre;">	</span>   s.Authentication.ServiceAccounts.ExtendExpiration,</div><div><br /></div><div><span style="">			</span>VersionedInformers: <span style="white-space: pre;">	</span><span style="white-space: pre;">	</span><span style="white-space: pre;">	</span>   versionedInformers,</div><div><br /></div><div><span style="">			</span>IdentityLeaseDurationSeconds:      <span style="white-space: pre;">	</span>   s.IdentityLeaseDurationSeconds,</div><div><span style="">			</span>IdentityLeaseRenewIntervalSeconds: <span style="white-space: pre;">	</span>   s.IdentityLeaseRenewIntervalSeconds,</div><div><span style="">		</span>},</div><div><span style="">	</span>}</div><div><span style="white-space: pre;">	</span>...<br /></div><div><br /></div><div><span style="">	</span>return config, serviceResolver, pluginInitializers, nil</div><div>}</div></pre></div></div></div></foreignObject><text x="157" y="1629" fill="#000000" font-family="Helvetica" font-size="12px">// CreateKubeAPIServerConfig creates all the resources for running the API server, but runs none of them...</text></switch></g><path d="M 0 2083 L 0 2060 L 1580 2060 L 1580 2083" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 2083 L 0 3340 L 1580 3340 L 1580 2083" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 2083 L 1580 2083" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="789.5" y="2076">buildGenericConfig (cmd/kube-apiserver/app/server.go)</text></g><rect x="0" y="2080" width="1580" height="1260" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1578px; height: 1px; padding-top: 2710px; margin-left: 2px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><font color="#7f00ff">// BuildGenericConfig takes the master server options and produces the genericapiserver.Config associated with it</font><div><b>func buildGenericConfig</b>(</div><div><span style="">	</span>s *options.ServerRunOptions,</div><div><span style="">	</span>proxyTransport *http.Transport,</div><div>) (</div><div><span style="">	</span>genericConfig *genericapiserver.Config,</div><div><span style="">	</span>versionedInformers clientgoinformers.SharedInformerFactory,</div><div><span style="">	</span>serviceResolver aggregatorapiserver.ServiceResolver,</div><div><span style="">	</span>pluginInitializers []admission.PluginInitializer,</div><div><span style="">	</span>admissionPostStartHook genericapiserver.PostStartHookFunc,</div><div><span style="">	</span>storageFactory *serverstorage.DefaultStorageFactory,</div><div><span style="">	</span>lastErr error,</div><div>) {</div><div><span style="">	</span><font color="#7f00ff">// create apiserver genericConfig, in NewConfig, the important one is </font><span style="background-color: initial;"><font color="#7f00ff">DefaultBuildHandlerChain which is http filter handler chain (staging/src/k8s.io/apiserver/pkg/server/config.go)</font></span><br /></div><div><span style="">	</span><b><font color="#00994d">genericConfig = genericapiserver.NewConfig(legacyscheme.Codecs)</font></b></div><div><span style="">	</span><b><font color="#00994d">genericConfig.MergedResourceConfig = controlplane.DefaultAPIResourceConfigSource()</font></b></div><div><span style="">	</span>...<br /></div><div><span style="">	</span><font color="#7f00ff">// long connection check</font><br /></div><div><span style="">	</span><b><font color="#00994d">genericConfig.LongRunningFunc = filters.BasicLongRunningRequestCheck</font></b>(</div><div><span style="">		</span>sets.NewString("watch", "proxy"),</div><div><span style="">		</span>sets.NewString("attach", "exec", "proxy", "log", "portforward"),</div><div><span style="">	</span>)</div><div><br /></div><div><span style="">	</span>kubeVersion := version.Get()</div><div><span style="">	</span>genericConfig.Version = &amp;kubeVersion</div><div><span style="">	</span><font color="#7f00ff">// create storageFactory to connect etcd</font><br /></div><div><span style="">	</span>storageFactoryConfig := kubeapiserver.NewStorageFactoryConfig()</div><div><span style="">	</span>storageFactoryConfig.APIResourceConfig = genericConfig.MergedResourceConfig</div><div><span style="">	</span><b><font color="#00994d">completedStorageFactoryConfig, err := storageFactoryConfig.Complete(s.Etcd)</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>lastErr = err</div><div><span style="">		</span>return</div><div><span style="">	</span>}</div><div><span style="">	</span>storageFactory, lastErr = completedStorageFactoryConfig.New()</div><div><span style="">	</span>if lastErr != nil {</div><div><span style="">		</span>return</div><div><span style="">	</span>}</div><div><span style="">	</span>...<br /></div><div><font color="#7f00ff"><span style="">	</span>// init authentication config<br /></font></div><div><font color="#7f00ff"><span style="">	</span>// Authentication.ApplyTo requires already applied OpenAPIConfig and EgressSelector if present</font></div><div><span style="">	</span>if lastErr = <b><font color="#00994d">s.Authentication.ApplyTo</font></b>(&amp;genericConfig.Authentication, genericConfig.SecureServing, genericConfig.EgressSelector, genericConfig.OpenAPIConfig, genericConfig.OpenAPIV3Config, clientgoExternalClient, versionedInformers); lastErr != nil {</div><div><span style="">		</span>return</div><div><span style="">	</span>}</div><div><span style="">	</span><font color="#7f00ff">// init authorization config</font><br /></div><div><span style="">	</span><b><font color="#00994d">genericConfig.Authorization.Authorizer, genericConfig.RuleResolver, err = BuildAuthorizer(s, genericConfig.EgressSelector, versionedInformers)</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>lastErr = fmt.Errorf("invalid authorization config: %v", err)</div><div><span style="">		</span>return</div><div><span style="">	</span>}</div><div><span style="">	</span>if !sets.NewString(s.Authorization.Modes...).Has(modes.ModeRBAC) {</div><div><span style="">		</span>genericConfig.DisabledPostStartHooks.Insert(rbacrest.PostStartHookName)</div><div><span style="">	</span>}</div><div><span style="">	</span><font color="#7f00ff">// init audit config</font><br /></div><div><span style="">	</span><b><font color="#00994d">lastErr = s.Audit.ApplyTo(genericConfig)</font></b></div><div><span style="">	</span>if lastErr != nil {</div><div><span style="">		</span>return</div><div><span style="">	</span>}</div><div><span style="">	</span><font color="#7f00ff">// init admission config</font><br /></div><div><span style="">	</span>admissionConfig := &amp;kubeapiserveradmission.Config{</div><div><span style="">		</span>ExternalInformers:    versionedInformers,</div><div><span style="">		</span>LoopbackClientConfig: genericConfig.LoopbackClientConfig,</div><div><span style="">		</span>CloudConfigFile:      s.CloudProvider.CloudConfigFile,</div><div><span style="">	</span>}</div><div><span style="">	</span>serviceResolver = buildServiceResolver(s.EnableAggregatorRouting, genericConfig.LoopbackClientConfig.Host, versionedInformers)</div><div><span style="">	</span>pluginInitializers, admissionPostStartHook, err = admissionConfig.New(proxyTransport, genericConfig.EgressSelector, serviceResolver, genericConfig.TracerProvider)</div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>lastErr = fmt.Errorf("failed to create admission plugin initializer: %v", err)</div><div><span style="">		</span>return</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>err = <b><font color="#00994d">s.Admission.ApplyTo</font></b>(</div><div><span style="">		</span>genericConfig,</div><div><span style="">		</span>versionedInformers,</div><div><span style="">		</span>kubeClientConfig,</div><div><span style="">		</span>utilfeature.DefaultFeatureGate,</div><div><span style="">		</span>pluginInitializers...)</div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>lastErr = fmt.Errorf("failed to initialize admission: %v", err)</div><div><span style="">		</span>return</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>if utilfeature.DefaultFeatureGate.Enabled(genericfeatures.APIPriorityAndFairness) &amp;&amp; s.GenericServerRunOptions.EnablePriorityAndFairness {</div><div><span style="">		</span>genericConfig.FlowControl, lastErr = BuildPriorityAndFairness(s, clientgoExternalClient, versionedInformers)</div><div><span style="">	</span>}</div><pre><div><span style="">	</span>return</div><div>}</div></pre></pre></div></div></div></foreignObject><text x="2" y="2714" fill="#000000" font-family="Helvetica" font-size="12px">// BuildGenericConfig takes the master server options and produces the genericapiserver.Config associated with it...</text></switch></g><path d="M 2080 110 L 2080 143.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2080 148.88 L 2076.5 141.88 L 2080 143.63 L 2083.5 141.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2080 390 L 2080 423.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2080 428.88 L 2076.5 421.88 L 2080 423.63 L 2083.5 421.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2080.5 1160 L 2080.5 1190 L 790 1190 L 790 1213.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 790 1218.88 L 786.5 1211.88 L 790 1213.63 L 793.5 1211.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 790 2010 L 790 2053.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 790 2058.88 L 786.5 2051.88 L 790 2053.63 L 793.5 2051.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2705 1243 L 2705 1220 L 3655 1220 L 3655 1243" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2705 1243 L 2705 1370 L 3655 1370 L 3655 1243" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2705 1243 L 3655 1243" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3179.5" y="1236">CreateKubeAPIServer (cmd/kube-apiserver/app/server.go)</text></g><rect x="2705" y="1240" width="950" height="130" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 948px; height: 1px; padding-top: 1305px; margin-left: 2707px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><font color="#7f00ff">// CreateKubeAPIServer creates and wires a workable kube-apiserver</font><div><b>func CreateKubeAPIServer</b>(kubeAPIServerConfig *controlplane.Config, delegateAPIServer genericapiserver.DelegationTarget) (*controlplane.Instance, error) {</div><div><span style="">	</span><b><font color="#00994d">kubeAPIServer, err := kubeAPIServerConfig.Complete().New(delegateAPIServer)</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span>return kubeAPIServer, nil</div><div>}</div></pre></div></div></div></foreignObject><text x="2707" y="1309" fill="#000000" font-family="Helvetica" font-size="12px">// CreateKubeAPIServer creates and wires a workable kube-apiserver...</text></switch></g><path d="M 2080.5 1160 L 2080.5 1190 L 3180 1190 L 3180 1213.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3180 1218.88 L 3176.5 1211.88 L 3180 1213.63 L 3183.5 1211.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2640 1443 L 2640 1420 L 3720 1420 L 3720 1443" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2640 1443 L 2640 2340 L 3720 2340 L 3720 1443" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2640 1443 L 3720 1443" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3179.5" y="1436">New (pkg/controlplane/instance.go)</text></g><rect x="2640" y="1440" width="1080" height="900" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1078px; height: 1px; padding-top: 1890px; margin-left: 2642px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><font color="#7f00ff">// New returns a new instance of Master from the given config.</font><div><font color="#7f00ff">// Certain config fields will be set to a default value if unset.</font></div><div><font color="#7f00ff">// Certain config fields must be specified, including:</font></div><div><font color="#7f00ff">// KubeletClientConfig</font></div><div><b>func (c completedConfig) New(delegationTarget genericapiserver.DelegationTarget) (*Instance, error) </b>{</div><div><span style="">	</span>if reflect.DeepEqual(c.ExtraConfig.KubeletClientConfig, kubeletclient.KubeletClientConfig{}) {</div><div><span style="">		</span>return nil, fmt.Errorf("Master.New() called with empty config.KubeletClientConfig")</div><div><span style="">	</span>}</div><div><br /></div><div><span style="">	</span><b><font color="#00994d">s, err := c.GenericConfig.New("kube-apiserver", delegationTarget)</font></b></div><div><span style="">	</span>if err != nil {</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><span style="">	</span>...<br /></div><div><span style="">	</span>m := &amp;Instance{</div><div><span style="">		</span>GenericAPIServer:          s,</div><div><span style="">		</span>ClusterAuthenticationInfo:      c.ExtraConfig.ClusterAuthenticationInfo,</div><div><span style="">	</span>}</div><div><br /></div><div><font color="#7f00ff"><span style="">	</span>// every api resource correspond to a RESTStorage which communicate with etcd<br /></font></div><div><font color="#7f00ff"><span style="">	</span>// install /api/... resource handlers</font></div><div><font color="#7f00ff"><span style="">	</span>// </font><span style="background-color: initial;"><font color="#7f00ff">InstallLegacyAPI -&gt; </font></span><span style="background-color: initial;"><font color="#7f00ff">GenericAPIServer.InstallLegacyAPIGroup -&gt; </font></span><span style="background-color: initial;"><font color="#7f00ff">GenericAPIServer.</font></span><span style="background-color: initial;"><font color="#7f00ff">installAPIResources -&gt; </font></span><span style="background-color: initial;"><font color="#7f00ff">apiGroupVersion.InstallREST</font></span></div><div><span style="background-color: initial;"><font color="#7f00ff"><span style="">	</span>// -&gt; </font></span><span style="background-color: initial;"><font color="#7f00ff">APIInstaller.Install (staging/src/k8s.io/apiserver/pkg/endpoints/installer.go) -&gt; </font></span><span style="background-color: initial;"><font color="#7f00ff">APIInstaller.</font></span><span style="background-color: initial;"><font color="#7f00ff">registerResourceHandlers</font></span></div><div><font color="#7f00ff"><span style="">	</span>// call NewLegacyRESTStorage (pkg/registry/core/rest/storage_core.go) to create RESTStorage, module source path is pkg/registry/core/{module_name}/storage/storage.go</font><br /></div><div><span style="">	</span><b><font color="#00994d">if err := m.InstallLegacyAPI(&amp;c, c.GenericConfig.RESTOptionsGetter); err != nil</font></b> {</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><br /></div><div><font color="#7f00ff"><span style="">	</span>// all these restStorageProviders will create RESTStorage in the following InstallAPIs<br /></font></div><div><span style="">	</span><b><font color="#00994d">restStorageProviders</font></b> := []RESTStorageProvider{</div><div><span style="">		</span>apiserverinternalrest.StorageProvider{},</div><div><span style="">		</span>authenticationrest.RESTStorageProvider{Authenticator: c.GenericConfig.Authentication.Authenticator, APIAudiences: c.GenericConfig.Authentication.APIAudiences},</div><div><span style="">		</span>authorizationrest.RESTStorageProvider{Authorizer: c.GenericConfig.Authorization.Authorizer, RuleResolver: c.GenericConfig.RuleResolver},</div><div><span style="">		</span>autoscalingrest.RESTStorageProvider{},</div><div><span style="">		</span>batchrest.RESTStorageProvider{},</div><div><span style="">		</span>certificatesrest.RESTStorageProvider{},</div><div><span style="">		</span>coordinationrest.RESTStorageProvider{},</div><div><span style="">		</span>discoveryrest.StorageProvider{},</div><div><span style="">		</span>networkingrest.RESTStorageProvider{},</div><div><span style="">		</span>noderest.RESTStorageProvider{},</div><div><span style="">		</span>policyrest.RESTStorageProvider{},</div><div><span style="">		</span>rbacrest.RESTStorageProvider{Authorizer: c.GenericConfig.Authorization.Authorizer},</div><div><span style="">		</span>schedulingrest.RESTStorageProvider{},</div><div><span style="">		</span>storagerest.RESTStorageProvider{},</div><div><span style="">		</span>flowcontrolrest.RESTStorageProvider{InformerFactory: c.GenericConfig.SharedInformerFactory},</div><div><span style="">		</span>// keep apps after extensions so legacy clients resolve the extensions versions of shared resource names.</div><div><span style="">		</span>// See https://github.com/kubernetes/kubernetes/issues/42392</div><div><span style="">		</span>appsrest.StorageProvider{},</div><div><span style="">		</span>admissionregistrationrest.RESTStorageProvider{},</div><div><span style="">		</span>eventsrest.RESTStorageProvider{TTL: c.ExtraConfig.EventTTL},</div><div><span style="">	</span>}</div><div><br /></div><div><font color="#7f00ff"><span style="">	</span>// install /apis/{group}/... handlers<br /></font></div><div><font color="#7f00ff"><span style="">	</span>// the group names are coming from RESTStorageProvider.GroupName, like eventsrest.RESTStorageProvider (pkg/registry/events/rest/storage_events.go)<br /></font></div><div><font color="#7f00ff"><span style="">	</span>// InstallAPIs iterates all restStorageProviders to construct apiGroupsInfo and call GenericAPIServer.InstallAPIGroups -&gt; GenericAPIServer.installAPIResources</font><br /></div><div><span style="">	</span><b><font color="#00994d">if err := m.InstallAPIs(c.ExtraConfig.APIResourceConfigSource, c.GenericConfig.RESTOptionsGetter, restStorageProviders...); err != nil</font></b> {</div><div><span style="">		</span>return nil, err</div><div><span style="">	</span>}</div><div><span style="white-space: pre;">	</span>...<br /></div><div><br /></div><div><span style="">	</span>return m, nil</div><div>}</div></pre></div></div></div></foreignObject><text x="2642" y="1894" fill="#000000" font-family="Helvetica" font-size="12px">// New returns a new instance of Master from the given config....</text></switch></g><path d="M 3180 1370 L 3180 1413.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3180 1418.88 L 3176.5 1411.88 L 3180 1413.63 L 3183.5 1411.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1651 2311 L 1651 2288 L 2591 2288 L 2591 2311" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1651 2311 L 1651 3110 L 2591 3110 L 2591 2311" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1651 2311 L 2591 2311" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2120.5" y="2304">DefaultBuildHandlerChain (staging/src/k8s.io/apiserver/pkg/server/config.go)</text></g><rect x="1651" y="2310" width="940" height="800" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 938px; height: 1px; padding-top: 2710px; margin-left: 1653px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><pre><font color="#7f00ff">// register http filter handlers<br />// WithAuthorization, WithPriorityAndFairness, WithMaxInFlightLimit, WithImpersonation, WithAudit, WithFailedAuthenticationAudit, WithAuthentication<br />// WithCORS, WithTimeoutForNonLongRunningRequests, WithRequestDeadline, WithWaitGroup, WithProbabilistic, WithAuditAnnotations<br />// WithWarningRecorder, WithCacheControl, WithHSTS, WithRetryAfter, WithHTTPLogging, WithTracing, WithLatencyTrackers, WithRequestInfo<br />// WithRequestReceivedTimestamp, WithMuxAndDiscoveryComplete, WithPanicRecovery, WithAuditID</font><br /><b>func DefaultBuildHandlerChain(apiHandler http.Handler, c *Config) http.Handler</b> {<br />	handler = genericapifilters.WithAuthorization(handler, c.Authorization.Authorizer, c.Serializer)<br /><br />	if c.FlowControl != nil {<br />		requestWorkEstimator := flowcontrolrequest.NewWorkEstimator(c.StorageObjectCountTracker.Get, c.FlowControl.GetInterestedWatchCount)		<br />		handler = genericfilters.WithPriorityAndFairness(handler, c.LongRunningFunc, c.FlowControl, requestWorkEstimator)<br />	} else {<br />		handler = genericfilters.WithMaxInFlightLimit(handler, c.MaxRequestsInFlight, c.MaxMutatingRequestsInFlight, c.LongRunningFunc)<br />	}<br />	<br />	handler = genericapifilters.WithImpersonation(handler, c.Authorization.Authorizer, c.Serializer)<br /><br />	handler = genericapifilters.WithAudit(handler, c.AuditBackend, c.AuditPolicyRuleEvaluator, c.LongRunningFunc)<br /><br />	failedHandler := genericapifilters.Unauthorized(c.Serializer)<br />	failedHandler = genericapifilters.WithFailedAuthenticationAudit(failedHandler, c.AuditBackend, c.AuditPolicyRuleEvaluator)<br /><br />	handler = genericapifilters.WithAuthentication(handler, c.Authentication.Authenticator, failedHandler, c.Authentication.APIAudiences)<br /><br />	handler = genericfilters.WithCORS(handler, c.CorsAllowedOriginList, nil, nil, nil, "true")<br /><br />	// WithTimeoutForNonLongRunningRequests will call the rest of the request handling in a go-routine with the<br />	// context with deadline. The go-routine can keep running, while the timeout logic will return a timeout to the client.<br />	handler = genericfilters.WithTimeoutForNonLongRunningRequests(handler, c.LongRunningFunc)<br /><br />	handler = genericapifilters.WithRequestDeadline(handler, c.AuditBackend, c.AuditPolicyRuleEvaluator,<br />		c.LongRunningFunc, c.Serializer, c.RequestTimeout)<br />	handler = genericfilters.WithWaitGroup(handler, c.LongRunningFunc, c.HandlerChainWaitGroup)<br />	if c.SecureServing != nil &amp;&amp; !c.SecureServing.DisableHTTP2 &amp;&amp; c.GoawayChance &gt; 0 {<br />		handler = genericfilters.WithProbabilisticGoaway(handler, c.GoawayChance)<br />	}<br />	handler = genericapifilters.WithAuditAnnotations(handler, c.AuditBackend, c.AuditPolicyRuleEvaluator)<br />	handler = genericapifilters.WithWarningRecorder(handler)<br />	handler = genericapifilters.WithCacheControl(handler)<br />	handler = genericfilters.WithHSTS(handler, c.HSTSDirectives)<br />	if c.ShutdownSendRetryAfter {<br />		handler = genericfilters.WithRetryAfter(handler, c.lifecycleSignals.AfterShutdownDelayDuration.Signaled())<br />	}<br />	handler = genericfilters.WithHTTPLogging(handler)<br />	if utilfeature.DefaultFeatureGate.Enabled(genericfeatures.APIServerTracing) {<br />		handler = genericapifilters.WithTracing(handler, c.TracerProvider)<br />	}<br />	handler = genericapifilters.WithLatencyTrackers(handler)<br />	handler = genericapifilters.WithRequestInfo(handler, c.RequestInfoResolver)<br />	handler = genericapifilters.WithRequestReceivedTimestamp(handler)<br />	handler = genericapifilters.WithMuxAndDiscoveryComplete(handler, c.lifecycleSignals.MuxAndDiscoveryComplete.Signaled())<br />	handler = genericfilters.WithPanicRecovery(handler, c.RequestInfoResolver)<br />	handler = genericapifilters.WithAuditID(handler)<br />	return handler<br />}<br /></pre></div></div></div></foreignObject><text x="1653" y="2714" fill="#000000" font-family="Helvetica" font-size="12px">// register http filter handlers...</text></switch></g><path d="M 1580 2710 L 1644.63 2710" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1649.88 2710 L 1642.88 2713.5 L 1644.63 2710 L 1642.88 2706.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>